const vmt_TV
   :TV.Start

const vmt_Visitor
   :Visitor.visit

const vmt_Tree
   :Tree.Delete
   :Tree.SetHas_Left
   :Tree.RemoveLeft
   :Tree.GetKey
   :Tree.SetRight
   :Tree.GetLeft
   :Tree.GetRight
   :Tree.Remove
   :Tree.SetLeft
   :Tree.Insert
   :Tree.accept
   :Tree.Print
   :Tree.Init
   :Tree.GetHas_Right
   :Tree.GetHas_Left
   :Tree.RemoveRight
   :Tree.Search
   :Tree.SetKey
   :Tree.Compare
   :Tree.SetHas_Right
   :Tree.RecPrint

const vmt_MyVisitor
   :MyVisitor.visit

func Main()
   t.0 = HeapAllocZ(4)
   [t.0] = :vmt_TV
   if t.0 goto :null0
      Error("null pointer")
   null0:
   t.1 = [t.0]
   t.1 = [t.1+0]
   t.2 = call t.1(t.0)
   PrintIntS(t.2)
   ret

func TV.Start(this)
   t.0 = HeapAllocZ(28)
   [t.0] = :vmt_Tree
   root = t.0
   t.1 = 16
   if root goto :null1
      Error("null pointer")
   null1:
   t.2 = [root]
   t.2 = [t.2+48]
   t.3 = call t.2(root t.1)
   ntb = t.3
   if root goto :null2
      Error("null pointer")
   null2:
   t.4 = [root]
   t.4 = [t.4+44]
   t.5 = call t.4(root)
   ntb = t.5
   PrintIntS(100000000)
   t.6 = 8
   if root goto :null3
      Error("null pointer")
   null3:
   t.7 = [root]
   t.7 = [t.7+36]
   t.8 = call t.7(root t.6)
   ntb = t.8
   t.9 = 24
   if root goto :null4
      Error("null pointer")
   null4:
   t.10 = [root]
   t.10 = [t.10+36]
   t.11 = call t.10(root t.9)
   ntb = t.11
   t.12 = 4
   if root goto :null5
      Error("null pointer")
   null5:
   t.13 = [root]
   t.13 = [t.13+36]
   t.14 = call t.13(root t.12)
   ntb = t.14
   t.15 = 12
   if root goto :null6
      Error("null pointer")
   null6:
   t.16 = [root]
   t.16 = [t.16+36]
   t.17 = call t.16(root t.15)
   ntb = t.17
   t.18 = 20
   if root goto :null7
      Error("null pointer")
   null7:
   t.19 = [root]
   t.19 = [t.19+36]
   t.20 = call t.19(root t.18)
   ntb = t.20
   t.21 = 28
   if root goto :null8
      Error("null pointer")
   null8:
   t.22 = [root]
   t.22 = [t.22+36]
   t.23 = call t.22(root t.21)
   ntb = t.23
   t.24 = 14
   if root goto :null9
      Error("null pointer")
   null9:
   t.25 = [root]
   t.25 = [t.25+36]
   t.26 = call t.25(root t.24)
   ntb = t.26
   if root goto :null10
      Error("null pointer")
   null10:
   t.27 = [root]
   t.27 = [t.27+44]
   t.28 = call t.27(root)
   ntb = t.28
   PrintIntS(100000000)
   t.29 = HeapAllocZ(12)
   [t.29] = :vmt_MyVisitor
   v = t.29
   PrintIntS(50000000)
   t.30 = v
   if root goto :null11
      Error("null pointer")
   null11:
   t.31 = [root]
   t.31 = [t.31+40]
   t.32 = call t.31(root t.30)
   nti = t.32
   PrintIntS(100000000)
   t.33 = 24
   if root goto :null12
      Error("null pointer")
   null12:
   t.34 = [root]
   t.34 = [t.34+64]
   t.35 = call t.34(root t.33)
   PrintIntS(t.35)
   t.36 = 12
   if root goto :null13
      Error("null pointer")
   null13:
   t.37 = [root]
   t.37 = [t.37+64]
   t.38 = call t.37(root t.36)
   PrintIntS(t.38)
   t.39 = 16
   if root goto :null14
      Error("null pointer")
   null14:
   t.40 = [root]
   t.40 = [t.40+64]
   t.41 = call t.40(root t.39)
   PrintIntS(t.41)
   t.42 = 50
   if root goto :null15
      Error("null pointer")
   null15:
   t.43 = [root]
   t.43 = [t.43+64]
   t.44 = call t.43(root t.42)
   PrintIntS(t.44)
   t.45 = 12
   if root goto :null16
      Error("null pointer")
   null16:
   t.46 = [root]
   t.46 = [t.46+64]
   t.47 = call t.46(root t.45)
   PrintIntS(t.47)
   t.48 = 12
   if root goto :null17
      Error("null pointer")
   null17:
   t.49 = [root]
   t.49 = [t.49+0]
   t.50 = call t.49(root t.48)
   ntb = t.50
   if root goto :null18
      Error("null pointer")
   null18:
   t.51 = [root]
   t.51 = [t.51+44]
   t.52 = call t.51(root)
   ntb = t.52
   t.53 = 12
   if root goto :null19
      Error("null pointer")
   null19:
   t.54 = [root]
   t.54 = [t.54+64]
   t.55 = call t.54(root t.53)
   PrintIntS(t.55)
   t.56 = 0
   ret t.56

func Tree.Init(this v_key)
   [this+24] = v_key
   [this+20] = 0
   [this+8] = 0
   t.0 = 1
   ret t.0

func Tree.SetRight(this rn)
   [this+16] = rn
   t.0 = 1
   ret t.0

func Tree.SetLeft(this ln)
   [this+4] = ln
   t.0 = 1
   ret t.0

func Tree.GetRight(this)
   t.0 = [this+16]
   ret t.0

func Tree.GetLeft(this)
   t.0 = [this+4]
   ret t.0

func Tree.GetKey(this)
   t.0 = [this+24]
   ret t.0

func Tree.SetKey(this v_key)
   [this+24] = v_key
   t.0 = 1
   ret t.0

func Tree.GetHas_Right(this)
   t.0 = [this+8]
   ret t.0

func Tree.GetHas_Left(this)
   t.0 = [this+20]
   ret t.0

func Tree.SetHas_Left(this val)
   [this+20] = val
   t.0 = 1
   ret t.0

func Tree.SetHas_Right(this val)
   [this+8] = val
   t.0 = 1
   ret t.0

func Tree.Compare(this num1 num2)
   ntb = 0
   t.0 = Add(num2 1)
   nti = t.0
   t.1 = LtS(num1 num2)
   if0 t.1 goto :if0_else
      ntb = 0
      goto :if0_end
   if0_else:
      t.2 = LtS(num1 nti)
      t.3 = Sub(1 t.2)
      if0 t.3 goto :if1_else
         ntb = 0
         goto :if1_end
      if1_else:
         ntb = 1
      if1_end:
   if0_end:
   t.4 = ntb
   ret t.4

func Tree.Insert(this v_key)
   t.0 = HeapAllocZ(28)
   [t.0] = :vmt_Tree
   new_node = t.0
   t.1 = v_key
   if new_node goto :null20
      Error("null pointer")
   null20:
   t.2 = [new_node]
   t.2 = [t.2+48]
   t.3 = call t.2(new_node t.1)
   ntb = t.3
   current_node = this
   cont = 1
   while0_top:
   if0 cont goto :while0_end
      if current_node goto :null21
         Error("null pointer")
      null21:
      t.4 = [current_node]
      t.4 = [t.4+12]
      t.5 = call t.4(current_node)
      key_aux = t.5
      t.6 = LtS(v_key key_aux)
      if0 t.6 goto :if2_else
         if current_node goto :null22
            Error("null pointer")
         null22:
         t.7 = [current_node]
         t.7 = [t.7+56]
         t.8 = call t.7(current_node)
         if0 t.8 goto :if3_else
            if current_node goto :null23
               Error("null pointer")
            null23:
            t.9 = [current_node]
            t.9 = [t.9+20]
            t.10 = call t.9(current_node)
            current_node = t.10
            goto :if3_end
         if3_else:
            cont = 0
            t.11 = 1
            if current_node goto :null24
               Error("null pointer")
            null24:
            t.12 = [current_node]
            t.12 = [t.12+4]
            t.13 = call t.12(current_node t.11)
            ntb = t.13
            t.14 = new_node
            if current_node goto :null25
               Error("null pointer")
            null25:
            t.15 = [current_node]
            t.15 = [t.15+32]
            t.16 = call t.15(current_node t.14)
            ntb = t.16
         if3_end:
         goto :if2_end
      if2_else:
         if current_node goto :null26
            Error("null pointer")
         null26:
         t.17 = [current_node]
         t.17 = [t.17+52]
         t.18 = call t.17(current_node)
         if0 t.18 goto :if4_else
            if current_node goto :null27
               Error("null pointer")
            null27:
            t.19 = [current_node]
            t.19 = [t.19+24]
            t.20 = call t.19(current_node)
            current_node = t.20
            goto :if4_end
         if4_else:
            cont = 0
            t.21 = 1
            if current_node goto :null28
               Error("null pointer")
            null28:
            t.22 = [current_node]
            t.22 = [t.22+76]
            t.23 = call t.22(current_node t.21)
            ntb = t.23
            t.24 = new_node
            if current_node goto :null29
               Error("null pointer")
            null29:
            t.25 = [current_node]
            t.25 = [t.25+16]
            t.26 = call t.25(current_node t.24)
            ntb = t.26
         if4_end:
      if2_end:
      goto :while0_top
   while0_end:
   t.27 = 1
   ret t.27

func Tree.Delete(this v_key)
   current_node = this
   parent_node = this
   cont = 1
   found = 0
   is_root = 1
   while1_top:
   if0 cont goto :while1_end
      if current_node goto :null30
         Error("null pointer")
      null30:
      t.0 = [current_node]
      t.0 = [t.0+12]
      t.1 = call t.0(current_node)
      key_aux = t.1
      t.2 = LtS(v_key key_aux)
      if0 t.2 goto :if5_else
         if current_node goto :null31
            Error("null pointer")
         null31:
         t.3 = [current_node]
         t.3 = [t.3+56]
         t.4 = call t.3(current_node)
         if0 t.4 goto :if6_else
            parent_node = current_node
            if current_node goto :null32
               Error("null pointer")
            null32:
            t.5 = [current_node]
            t.5 = [t.5+20]
            t.6 = call t.5(current_node)
            current_node = t.6
            goto :if6_end
         if6_else:
            cont = 0
         if6_end:
         goto :if5_end
      if5_else:
         t.7 = LtS(key_aux v_key)
         if0 t.7 goto :if7_else
            if current_node goto :null33
               Error("null pointer")
            null33:
            t.8 = [current_node]
            t.8 = [t.8+52]
            t.9 = call t.8(current_node)
            if0 t.9 goto :if8_else
               parent_node = current_node
               if current_node goto :null34
                  Error("null pointer")
               null34:
               t.10 = [current_node]
               t.10 = [t.10+24]
               t.11 = call t.10(current_node)
               current_node = t.11
               goto :if8_end
            if8_else:
               cont = 0
            if8_end:
            goto :if7_end
         if7_else:
            if0 is_root goto :if9_else
               if current_node goto :null35
                  Error("null pointer")
               null35:
               t.12 = [current_node]
               t.12 = [t.12+52]
               t.13 = call t.12(current_node)
               t.14 = Sub(1 t.13)
               t.16 = t.14
               if0 t.16 goto :ss0_else
                  if current_node goto :null36
                     Error("null pointer")
                  null36:
                  t.17 = [current_node]
                  t.17 = [t.17+56]
                  t.18 = call t.17(current_node)
                  t.19 = Sub(1 t.18)
                  t.15 = t.19
                  goto :ss0_end
               ss0_else:
                  t.15 = 0
               ss0_end:
               if0 t.15 goto :if10_else
                  ntb = 1
                  goto :if10_end
               if10_else:
                  t.20 = current_node
                  t.21 = parent_node
                  t.22 = [this]
                  t.22 = [t.22+28]
                  t.23 = call t.22(this t.21 t.20)
                  ntb = t.23
               if10_end:
               goto :if9_end
            if9_else:
               t.24 = current_node
               t.25 = parent_node
               t.26 = [this]
               t.26 = [t.26+28]
               t.27 = call t.26(this t.25 t.24)
               ntb = t.27
            if9_end:
            found = 1
            cont = 0
         if7_end:
      if5_end:
      is_root = 0
      goto :while1_top
   while1_end:
   t.28 = found
   ret t.28

func Tree.Remove(this p_node c_node)
   if c_node goto :null37
      Error("null pointer")
   null37:
   t.0 = [c_node]
   t.0 = [t.0+56]
   t.1 = call t.0(c_node)
   if0 t.1 goto :if11_else
      t.2 = c_node
      t.3 = p_node
      t.4 = [this]
      t.4 = [t.4+8]
      t.5 = call t.4(this t.3 t.2)
      ntb = t.5
      goto :if11_end
   if11_else:
      if c_node goto :null38
         Error("null pointer")
      null38:
      t.6 = [c_node]
      t.6 = [t.6+52]
      t.7 = call t.6(c_node)
      if0 t.7 goto :if12_else
         t.8 = c_node
         t.9 = p_node
         t.10 = [this]
         t.10 = [t.10+60]
         t.11 = call t.10(this t.9 t.8)
         ntb = t.11
         goto :if12_end
      if12_else:
         if c_node goto :null39
            Error("null pointer")
         null39:
         t.12 = [c_node]
         t.12 = [t.12+12]
         t.13 = call t.12(c_node)
         auxkey1 = t.13
         if p_node goto :null40
            Error("null pointer")
         null40:
         t.14 = [p_node]
         t.14 = [t.14+20]
         t.15 = call t.14(p_node)
         if t.15 goto :null41
            Error("null pointer")
         null41:
         t.16 = [t.15]
         t.16 = [t.16+12]
         t.17 = call t.16(t.15)
         auxkey2 = t.17
         t.18 = auxkey2
         t.19 = auxkey1
         t.20 = [this]
         t.20 = [t.20+72]
         t.21 = call t.20(this t.19 t.18)
         if0 t.21 goto :if13_else
            t.22 = [this+12]
            if p_node goto :null42
               Error("null pointer")
            null42:
            t.23 = [p_node]
            t.23 = [t.23+32]
            t.24 = call t.23(p_node t.22)
            ntb = t.24
            t.25 = 0
            if p_node goto :null43
               Error("null pointer")
            null43:
            t.26 = [p_node]
            t.26 = [t.26+4]
            t.27 = call t.26(p_node t.25)
            ntb = t.27
            goto :if13_end
         if13_else:
            t.28 = [this+12]
            if p_node goto :null44
               Error("null pointer")
            null44:
            t.29 = [p_node]
            t.29 = [t.29+16]
            t.30 = call t.29(p_node t.28)
            ntb = t.30
            t.31 = 0
            if p_node goto :null45
               Error("null pointer")
            null45:
            t.32 = [p_node]
            t.32 = [t.32+76]
            t.33 = call t.32(p_node t.31)
            ntb = t.33
         if13_end:
      if12_end:
   if11_end:
   t.34 = 1
   ret t.34

func Tree.RemoveRight(this p_node c_node)
   while2_top:
   if c_node goto :null46
      Error("null pointer")
   null46:
   t.0 = [c_node]
   t.0 = [t.0+52]
   t.1 = call t.0(c_node)
   if0 t.1 goto :while2_end
      if c_node goto :null47
         Error("null pointer")
      null47:
      t.2 = [c_node]
      t.2 = [t.2+24]
      t.3 = call t.2(c_node)
      if t.3 goto :null48
         Error("null pointer")
      null48:
      t.4 = [t.3]
      t.4 = [t.4+12]
      t.5 = call t.4(t.3)
      t.6 = t.5
      if c_node goto :null49
         Error("null pointer")
      null49:
      t.7 = [c_node]
      t.7 = [t.7+68]
      t.8 = call t.7(c_node t.6)
      ntb = t.8
      p_node = c_node
      if c_node goto :null50
         Error("null pointer")
      null50:
      t.9 = [c_node]
      t.9 = [t.9+24]
      t.10 = call t.9(c_node)
      c_node = t.10
      goto :while2_top
   while2_end:
   t.11 = [this+12]
   if p_node goto :null51
      Error("null pointer")
   null51:
   t.12 = [p_node]
   t.12 = [t.12+16]
   t.13 = call t.12(p_node t.11)
   ntb = t.13
   t.14 = 0
   if p_node goto :null52
      Error("null pointer")
   null52:
   t.15 = [p_node]
   t.15 = [t.15+76]
   t.16 = call t.15(p_node t.14)
   ntb = t.16
   t.17 = 1
   ret t.17

func Tree.RemoveLeft(this p_node c_node)
   while3_top:
   if c_node goto :null53
      Error("null pointer")
   null53:
   t.0 = [c_node]
   t.0 = [t.0+56]
   t.1 = call t.0(c_node)
   if0 t.1 goto :while3_end
      if c_node goto :null54
         Error("null pointer")
      null54:
      t.2 = [c_node]
      t.2 = [t.2+20]
      t.3 = call t.2(c_node)
      if t.3 goto :null55
         Error("null pointer")
      null55:
      t.4 = [t.3]
      t.4 = [t.4+12]
      t.5 = call t.4(t.3)
      t.6 = t.5
      if c_node goto :null56
         Error("null pointer")
      null56:
      t.7 = [c_node]
      t.7 = [t.7+68]
      t.8 = call t.7(c_node t.6)
      ntb = t.8
      p_node = c_node
      if c_node goto :null57
         Error("null pointer")
      null57:
      t.9 = [c_node]
      t.9 = [t.9+20]
      t.10 = call t.9(c_node)
      c_node = t.10
      goto :while3_top
   while3_end:
   t.11 = [this+12]
   if p_node goto :null58
      Error("null pointer")
   null58:
   t.12 = [p_node]
   t.12 = [t.12+32]
   t.13 = call t.12(p_node t.11)
   ntb = t.13
   t.14 = 0
   if p_node goto :null59
      Error("null pointer")
   null59:
   t.15 = [p_node]
   t.15 = [t.15+4]
   t.16 = call t.15(p_node t.14)
   ntb = t.16
   t.17 = 1
   ret t.17

func Tree.Search(this v_key)
   current_node = this
   cont = 1
   ifound = 0
   while4_top:
   if0 cont goto :while4_end
      if current_node goto :null60
         Error("null pointer")
      null60:
      t.0 = [current_node]
      t.0 = [t.0+12]
      t.1 = call t.0(current_node)
      key_aux = t.1
      t.2 = LtS(v_key key_aux)
      if0 t.2 goto :if14_else
         if current_node goto :null61
            Error("null pointer")
         null61:
         t.3 = [current_node]
         t.3 = [t.3+56]
         t.4 = call t.3(current_node)
         if0 t.4 goto :if15_else
            if current_node goto :null62
               Error("null pointer")
            null62:
            t.5 = [current_node]
            t.5 = [t.5+20]
            t.6 = call t.5(current_node)
            current_node = t.6
            goto :if15_end
         if15_else:
            cont = 0
         if15_end:
         goto :if14_end
      if14_else:
         t.7 = LtS(key_aux v_key)
         if0 t.7 goto :if16_else
            if current_node goto :null63
               Error("null pointer")
            null63:
            t.8 = [current_node]
            t.8 = [t.8+52]
            t.9 = call t.8(current_node)
            if0 t.9 goto :if17_else
               if current_node goto :null64
                  Error("null pointer")
               null64:
               t.10 = [current_node]
               t.10 = [t.10+24]
               t.11 = call t.10(current_node)
               current_node = t.11
               goto :if17_end
            if17_else:
               cont = 0
            if17_end:
            goto :if16_end
         if16_else:
            ifound = 1
            cont = 0
         if16_end:
      if14_end:
      goto :while4_top
   while4_end:
   t.12 = ifound
   ret t.12

func Tree.Print(this)
   current_node = this
   t.0 = current_node
   t.1 = [this]
   t.1 = [t.1+80]
   t.2 = call t.1(this t.0)
   ntb = t.2
   t.3 = 1
   ret t.3

func Tree.RecPrint(this node)
   if node goto :null65
      Error("null pointer")
   null65:
   t.0 = [node]
   t.0 = [t.0+56]
   t.1 = call t.0(node)
   if0 t.1 goto :if18_else
      if node goto :null66
         Error("null pointer")
      null66:
      t.2 = [node]
      t.2 = [t.2+20]
      t.3 = call t.2(node)
      t.4 = t.3
      t.5 = [this]
      t.5 = [t.5+80]
      t.6 = call t.5(this t.4)
      ntb = t.6
      goto :if18_end
   if18_else:
      ntb = 1
   if18_end:
   if node goto :null67
      Error("null pointer")
   null67:
   t.7 = [node]
   t.7 = [t.7+12]
   t.8 = call t.7(node)
   PrintIntS(t.8)
   if node goto :null68
      Error("null pointer")
   null68:
   t.9 = [node]
   t.9 = [t.9+52]
   t.10 = call t.9(node)
   if0 t.10 goto :if19_else
      if node goto :null69
         Error("null pointer")
      null69:
      t.11 = [node]
      t.11 = [t.11+24]
      t.12 = call t.11(node)
      t.13 = t.12
      t.14 = [this]
      t.14 = [t.14+80]
      t.15 = call t.14(this t.13)
      ntb = t.15
      goto :if19_end
   if19_else:
      ntb = 1
   if19_end:
   t.16 = 1
   ret t.16

func Tree.accept(this v)
   PrintIntS(333)
   t.0 = this
   if v goto :null70
      Error("null pointer")
   null70:
   t.1 = [v]
   t.1 = [t.1+0]
   t.2 = call t.1(v t.0)
   nti = t.2
   t.3 = 0
   ret t.3

func Visitor.visit(this n)
   if n goto :null71
      Error("null pointer")
   null71:
   t.0 = [n]
   t.0 = [t.0+52]
   t.1 = call t.0(n)
   if0 t.1 goto :if20_else
      if n goto :null72
         Error("null pointer")
      null72:
      t.2 = [n]
      t.2 = [t.2+24]
      t.3 = call t.2(n)
      [this+4] = t.3
      t.4 = this
      if [this+4] goto :null73
         Error("null pointer")
      null73:
      t.5 = [[this+4]]
      t.5 = [t.5+40]
      t.6 = call t.5([this+4] t.4)
      nti = t.6
      goto :if20_end
   if20_else:
      nti = 0
   if20_end:
   if n goto :null74
      Error("null pointer")
   null74:
   t.7 = [n]
   t.7 = [t.7+56]
   t.8 = call t.7(n)
   if0 t.8 goto :if21_else
      if n goto :null75
         Error("null pointer")
      null75:
      t.9 = [n]
      t.9 = [t.9+20]
      t.10 = call t.9(n)
      [this+8] = t.10
      t.11 = this
      if [this+8] goto :null76
         Error("null pointer")
      null76:
      t.12 = [[this+8]]
      t.12 = [t.12+40]
      t.13 = call t.12([this+8] t.11)
      nti = t.13
      goto :if21_end
   if21_else:
      nti = 0
   if21_end:
   t.14 = 0
   ret t.14

func MyVisitor.visit(this n)
   if n goto :null77
      Error("null pointer")
   null77:
   t.0 = [n]
   t.0 = [t.0+52]
   t.1 = call t.0(n)
   if0 t.1 goto :if22_else
      if n goto :null78
         Error("null pointer")
      null78:
      t.2 = [n]
      t.2 = [t.2+24]
      t.3 = call t.2(n)
      [this+4] = t.3
      t.4 = this
      if [this+4] goto :null79
         Error("null pointer")
      null79:
      t.5 = [[this+4]]
      t.5 = [t.5+40]
      t.6 = call t.5([this+4] t.4)
      nti = t.6
      goto :if22_end
   if22_else:
      nti = 0
   if22_end:
   if n goto :null80
      Error("null pointer")
   null80:
   t.7 = [n]
   t.7 = [t.7+12]
   t.8 = call t.7(n)
   PrintIntS(t.8)
   if n goto :null81
      Error("null pointer")
   null81:
   t.9 = [n]
   t.9 = [t.9+56]
   t.10 = call t.9(n)
   if0 t.10 goto :if23_else
      if n goto :null82
         Error("null pointer")
      null82:
      t.11 = [n]
      t.11 = [t.11+20]
      t.12 = call t.11(n)
      [this+8] = t.12
      t.13 = this
      if [this+8] goto :null83
         Error("null pointer")
      null83:
      t.14 = [[this+8]]
      t.14 = [t.14+40]
      t.15 = call t.14([this+8] t.13)
      nti = t.15
      goto :if23_end
   if23_else:
      nti = 0
   if23_end:
   t.16 = 0
   ret t.16

func AllocArray(size)
   bytes = MulS(size 4)
   bytes = Add(bytes 4)
   v = HeapAllocZ(bytes)
   [v] = size
   ret v

